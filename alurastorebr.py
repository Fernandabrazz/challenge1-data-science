# -*- coding: utf-8 -*-
"""AluraStoreBr.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GuU2VWyZ0lNQAVqeF1vJUnN4_L8Whe3m

### Importação dos dados
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja = pd.read_csv(url)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja.head()

"""#1. Análise do faturamento

"""

import pandas as pd

# Leitura dos dados
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

# Unindo os dados
dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)

print(dados.columns)

import pandas as pd

# Leitura dos dados das 4 lojas
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

# Limpar nomes das colunas e converter 'Preço' para numérico
for loja in [loja1, loja2, loja3, loja4]:
    loja.columns = loja.columns.str.strip()
    loja['Preço'] = pd.to_numeric(loja['Preço'], errors='coerce')

# Calcular faturamento individual
faturamento_loja1 = loja1['Preço'].sum()
faturamento_loja2 = loja2['Preço'].sum()
faturamento_loja3 = loja3['Preço'].sum()
faturamento_loja4 = loja4['Preço'].sum()

# Exibir os resultados
print(f"Faturamento Loja 1: R$ {faturamento_loja1:,.2f}")
print(f"Faturamento Loja 2: R$ {faturamento_loja2:,.2f}")
print(f"Faturamento Loja 3: R$ {faturamento_loja3:,.2f}")
print(f"Faturamento Loja 4: R$ {faturamento_loja4:,.2f}")

"""# 2. Vendas por Categoria

"""

import pandas as pd

# URLs das lojas
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

# Leitura dos arquivos
loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

# Adiciona coluna com nome da loja
loja1["Loja"] = "Loja 1"
loja2["Loja"] = "Loja 2"
loja3["Loja"] = "Loja 3"
loja4["Loja"] = "Loja 4"

# Junta tudo em um único DataFrame
dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)

# Padroniza nomes das colunas
dados.columns = dados.columns.str.strip()

# Cria tabela dinâmica com categorias como índice e lojas como colunas
tabela_vendas = pd.pivot_table(
    dados,
    index='Categoria do Produto',
    columns='Loja',
    values='Produto',  # ou qualquer coluna, pois vamos contar
    aggfunc='count',
    fill_value=0
)

# Exibe a tabela
print(tabela_vendas)

"""# 3. Média de Avaliação das Lojas"""

import pandas as pd

# URLs das lojas
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

# Leitura dos arquivos
loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

# Adiciona coluna com nome da loja
loja1["Loja"] = "Loja 1"
loja2["Loja"] = "Loja 2"
loja3["Loja"] = "Loja 3"
loja4["Loja"] = "Loja 4"

# Junta tudo em um único DataFrame
dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)

# Padroniza os nomes das colunas
dados.columns = dados.columns.str.strip()

# Garante que a coluna de avaliação é numérica
dados['Avaliação da compra'] = pd.to_numeric(dados['Avaliação da compra'], errors='coerce')

# Calcula a média das avaliações por loja
media_avaliacoes = dados.groupby("Loja")['Avaliação da compra'].mean().round(2)

# Exibe o resultado
print(media_avaliacoes)



"""# 4. Produtos Mais e Menos Vendidos"""

import pandas as pd

# URLs e leitura dos dados (repetindo para contexto)
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja1['Loja'] = 'Loja 1'
loja2['Loja'] = 'Loja 2'
loja3['Loja'] = 'Loja 3'
loja4['Loja'] = 'Loja 4'

dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)
dados.columns = dados.columns.str.strip()

# Conta vendas por loja e produto
vendas_produtos = dados.groupby(['Loja', 'Produto']).size().reset_index(name='Quantidade')

# Inicializa lista para resultados
resultados = []

# Loop por loja para extrair mais e menos vendidos
for loja, grupo in vendas_produtos.groupby('Loja'):
    mais_vendido = grupo.loc[grupo['Quantidade'].idxmax()]
    menos_vendido = grupo.loc[grupo['Quantidade'].idxmin()]

    resultados.append({
        'Loja': loja,
        'Produto Mais Vendido': mais_vendido['Produto'],
        'Qtd Mais Vendida': mais_vendido['Quantidade'],
        'Produto Menos Vendido': menos_vendido['Produto'],
        'Qtd Menos Vendida': menos_vendido['Quantidade'],
    })

# Cria DataFrame final
df_resultado = pd.DataFrame(resultados)

print(df_resultado)

"""# 5. Frete Médio por Loja

Neste passo, vamos calcular o custo médio de frete para cada loja. O objetivo é entender quanto, em média, está sendo gasto com frete para cada uma das lojas.
"""

import pandas as pd

# URLs
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

# Lê as lojas e adiciona coluna loja
loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja1['Loja'] = 'Loja 1'
loja2['Loja'] = 'Loja 2'
loja3['Loja'] = 'Loja 3'
loja4['Loja'] = 'Loja 4'

# Concatena
dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)
dados.columns = dados.columns.str.strip()

# Calcula custo médio do frete por loja
custo_medio_frete = dados.groupby('Loja')['Frete'].mean().round(2)

print(custo_medio_frete)

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Configura o estilo
sns.set(style='whitegrid')

# Leitura dos dados
url1 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_1.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science/refs/heads/main/base-de-dados-challenge-1/loja_4.csv"

loja1 = pd.read_csv(url1)
loja2 = pd.read_csv(url2)
loja3 = pd.read_csv(url3)
loja4 = pd.read_csv(url4)

loja1['Loja'] = 'Loja 1'
loja2['Loja'] = 'Loja 2'
loja3['Loja'] = 'Loja 3'
loja4['Loja'] = 'Loja 4'

dados = pd.concat([loja1, loja2, loja3, loja4], ignore_index=True)
dados.columns = dados.columns.str.strip()

# 1. Faturamento por loja
faturamento = dados.groupby('Loja')['Preço'].sum().reset_index()

plt.figure(figsize=(8,6))
sns.barplot(data=faturamento, x='Loja', y='Preço', palette='viridis')
plt.title('Faturamento Total por Loja')
plt.ylabel('Faturamento (R$)')
plt.xlabel('Loja')
plt.tight_layout()
plt.show()

# 2. Quantidade de produtos vendidos por categoria (todas as lojas juntas)
categoria_vendas = dados.groupby('Categoria do Produto').size().reset_index(name='Quantidade').sort_values(by='Quantidade', ascending=False)

plt.figure(figsize=(8,8))
plt.pie(categoria_vendas['Quantidade'], labels=categoria_vendas['Categoria do Produto'], autopct='%1.1f%%', startangle=140)
plt.title('Distribuição de Vendas por Categoria de Produto')
plt.axis('equal')
plt.show()

# 3. Produtos mais vendidos por loja (gráfico barras horizontais)

# Calcula quantidade vendida por produto e loja
vendas_produtos = dados.groupby(['Loja', 'Produto']).size().reset_index(name='Quantidade')

# Para facilitar visualização, pega os 5 produtos mais vendidos por loja
top_produtos = vendas_produtos.groupby('Loja').apply(lambda x: x.nlargest(5, 'Quantidade')).reset_index(drop=True)

plt.figure(figsize=(10,8))
sns.barplot(data=top_produtos, y='Produto', x='Quantidade', hue='Loja', dodge=False)
plt.title('Top 5 Produtos Mais Vendidos por Loja')
plt.xlabel('Quantidade Vendida')
plt.ylabel('Produto')
plt.legend(title='Loja')
plt.tight_layout()
plt.show()

# Opcional: Custo médio do frete por loja (gráfico de barras simples)
frete_medio = dados.groupby('Loja')['Frete'].mean().reset_index()

plt.figure(figsize=(8,6))
sns.barplot(data=frete_medio, x='Loja', y='Frete', palette='coolwarm')
plt.title('Custo Médio do Frete por Loja')
plt.ylabel('Frete Médio (R$)')
plt.xlabel('Loja')
plt.tight_layout()
plt.show()

"""# Relatório de Análise das Lojas

Após análise detalhada dos dados das quatro lojas, considerando faturamento, categorias vendidas, avaliação dos clientes, produtos mais vendidos e custo médio do frete, temos os seguintes insights:

- **Loja 2** apresentou o maior faturamento total e uma boa média de avaliação, indicando alta satisfação dos clientes.
- **Loja 4** tem custo médio de frete elevado e o menor faturamento, além de uma avaliação média inferior às demais.
- **Loja 1** e **Loja 3** apresentam desempenho intermediário, com bom volume de vendas e avaliações consistentes.

**Conclusão:**

Recomendamos que o Sr. João venda a **Loja 4**, pois ela apresenta o menor desempenho em faturamento, maior custo de frete e avaliações mais baixas. Essa venda gerará capital para investir em um novo negócio, mantendo as lojas que mostram melhor desempenho e maior potencial de crescimento.

"""